from Cardfinder import find_fighters_on_cards
import cProfile
pr = cProfile.Profile()


class weight_finder:
    pr.enable()
    stats = []
    fighter1 = []
    fighter2 = []
    fighter11 = find_fighters_on_cards.fighter1
    fighter22 = find_fighters_on_cards.fighter2
    correct = []
    winners = []

    def stat_organiser(list1, list2, list3, list4):

        statperc = {
            'Record:': [],
            'Exp:': [],
            'Weight:': [],
            'Height:': [],
            'Reach:': [],
            'SLpM:': [],
            'Str.Acc.:': [],
            'SApM:': [],
            'Str.Def:': [],
            'TDAvg.:': [],
            'TDAcc.:': [],
            'TDDef.:': [],
            'Sub.Avg.:': [],
        }

        for y in range(len(list1)):

            stat_list1 = list1[y]
            stat_list2 = list2[y]
            fighter11 = {}
            fighter22 = {}
            for e in statperc:
                if stat_list1[e] > stat_list2[e]:
                    if stat_list2[e] == 0.0:
                        stat_list2[e] = stat_list1[e]/2
                    fighter11[e] = (stat_list1[e] - stat_list2[e]) / stat_list1[e]
                    statperc[e].append(stat_list1[e])
                if stat_list2[e] > stat_list1[e]:
                    if stat_list1[e] == 0.0:
                        stat_list1[e] = stat_list2[e]/2
                    fighter22[e] = (stat_list2[e] - stat_list1[e]) / stat_list2[e]
            list3.append(fighter11)
            list4.append(fighter22)

        return statperc

    statperc = (stat_organiser(find_fighters_on_cards.fighter1Stats, find_fighters_on_cards.fighter2Stats, fighter1, fighter2))

    def find_weights(dict1):
        stat_weight = {}
        for e in dict1:
            stat_weight[e] = str(len(dict1[e])) + '/' + str(len(find_fighters_on_cards.fighter1Stats))
        return stat_weight

    stat_weight = find_weights(statperc)
    print(stat_weight)

    for e in range(len(fighter1)):

        grapling_stats = []
        striking_stats = []
        exp_stats = []
        other_stats = []
        grapling_stats1 = []
        striking_stats1 = []
        exp_stats1 = []
        other_stats1 = []
        for y in stat_weight:

            if y in fighter1[e]:
                if y == 'Record:':
                    exp_stats.append(str(fighter1[e][y] * eval(stat_weight[y])))
                if y == 'Exp:':
                    exp_stats.append(str(fighter1[e][y] * eval(stat_weight[y])))
                if y == 'Weight:':
                    other_stats.append(str(fighter1[e][y] * eval(stat_weight[y])))
                if y == 'Reach:':
                    other_stats.append(str(fighter1[e][y] * eval(stat_weight[y])))
                if y == 'Height:':
                    other_stats.append(str(fighter1[e][y] * eval(stat_weight[y])))
                if y == 'SLpM:':
                    striking_stats.append(str(fighter1[e][y] * eval(stat_weight[y])))
                if y == 'Str.Acc.:':
                    striking_stats.append(str(fighter1[e][y] * eval(stat_weight[y])))
                if y == 'SApM:':
                    other_stats.append(str(fighter1[e][y] * eval(stat_weight[y])))
                if y == 'Str.Def:':
                    striking_stats.append(str(fighter1[e][y] * eval(stat_weight[y])))
                if y == 'TDAvg.:':
                    grapling_stats.append(str(fighter1[e][y] * eval(stat_weight[y])))
                if y == 'TDAcc.:':
                    grapling_stats.append(str(fighter1[e][y] * eval(stat_weight[y])))
                if y == 'TDDef.:':
                    striking_stats.append(str(fighter1[e][y] * eval(stat_weight[y])))
                if y == 'Sub.Avg.:':
                    grapling_stats.append(str(fighter1[e][y] * eval(stat_weight[y])))
            if y in fighter2[e]:
                if y == 'Record:':
                    exp_stats1.append(str(fighter2[e][y] * eval(stat_weight[y])))
                if y == 'Exp:':
                    exp_stats1.append(str(fighter2[e][y] * eval(stat_weight[y])))
                if y == 'Weight:':
                    other_stats1.append(str(fighter2[e][y] * eval(stat_weight[y])))
                if y == 'Reach:':
                    other_stats1.append(str(fighter2[e][y] * eval(stat_weight[y])))
                if y == 'Height:':
                    other_stats1.append(str(fighter2[e][y] * eval(stat_weight[y])))
                if y == 'SLpM:':
                    striking_stats1.append(str(fighter2[e][y] * eval(stat_weight[y])))
                if y == 'Str.Acc.:':
                    striking_stats1.append(str(fighter2[e][y] * eval(stat_weight[y])))
                if y == 'SApM:':
                    other_stats1.append(str(fighter2[e][y] * eval(stat_weight[y])))
                if y == 'Str.Def:':
                    striking_stats1.append(str(fighter2[e][y] * eval(stat_weight[y])))
                if y == 'TDAvg.:':
                    grapling_stats1.append(str(fighter2[e][y] * eval(stat_weight[y])))
                if y == 'TDAcc.:':
                    grapling_stats1.append(str(fighter2[e][y] * eval(stat_weight[y])))
                if y == 'TDDef.:':
                    striking_stats1.append(str(fighter2[e][y] * eval(stat_weight[y])))
                if y == 'Sub.Avg.:':
                    grapling_stats1.append(str(fighter2[e][y] * eval(stat_weight[y])))

        grap1 = ('+'.join(grapling_stats))
        grap2 = ('+'.join(grapling_stats1))
        strik1 = ('+'.join(striking_stats))
        strik2 = ('+'.join(striking_stats1))
        exp1 = ('+'.join(exp_stats))
        exp2 = ('+'.join(exp_stats1))
        other1 = ('+'.join(other_stats))
        other2 = ('+'.join(other_stats1))
        if grap1 == '':
            grap1 = '0'
        if grap2 == '':
            grap2 = '0'
        if strik1 == '':
            strik1 = '0'
        if strik2 == '':
            strik2 = '0'
        if exp1 == '':
            exp1 = '0'
        if exp2 == '':
            exp2 = '0'
        if other1 == '':
            other1 = '0'
        if other2 == '':
            other2 = '0'
        combo1 = float(eval(str((eval(grap1)*len(grap1)) + (eval(strik1)*len(strik1)) + (eval(exp1)*len(exp1)) + (eval(other1)*len(other1)))))
        combo2 = float(eval(str((eval(grap2)*len(grap2)) + (eval(strik2)*len(strik2)) + (eval(exp2)*len(exp2)) + (eval(other2)*len(other2)))))
        if combo1 > combo2:
            winners.append(fighter11[e])
        if combo1 < combo2:
            winners.append(fighter22[e])

    for k in range(len(winners)):
        e = winners[k]
        i = fighter11[k]
        if e == i:
            correct.append('ok')
   # print(winners, fighter11, fighter22)
    answer = len(correct) / len(fighter1)
    percentage = "{:.0%}".format(answer)
    print('Correct Percentage: ' + str(percentage))
    pr.disable()
    pr.print_stats()
